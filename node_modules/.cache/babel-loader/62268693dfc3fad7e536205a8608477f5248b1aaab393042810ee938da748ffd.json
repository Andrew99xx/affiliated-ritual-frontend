{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Aditya/projects/mine/dashboard copy/affiliated-ritual-frontend/src/components/Smallbar/Smallbar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport \"./Smallbar.css\";\nimport stat from \"./stat.png\";\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Smallbar = () => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const data = {\n      labels: ['1', '2', '3', '4', '5', '6'],\n      datasets: [{\n        label: 'Data',\n        data: [80, 60, 90, 70, 50, 60],\n        backgroundColor: '#e4c748',\n        borderColor: '#e4c748',\n        borderWidth: .5,\n        borderRadius: 20\n      }]\n    };\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        y: {\n          display: false // Hide y-axis\n        }\n      },\n      plugins: {\n        legend: {\n          display: false // Hide legend\n        }\n      },\n      indexAxis: 'x',\n      // Display bars horizontally\n      barPercentage: 0.2,\n      // Adjust bar width to fill the entire width of the canvas\n      categoryPercentage: 1 // Adjust space between bars\n    };\n    const ctx = chartRef.current;\n    if (ctx) {\n      // Destroy existing chart if it exists\n      if (ctx.chart) {\n        ctx.chart.destroy();\n      }\n\n      // Create new chart\n      ctx.chart = new Chart(ctx, {\n        type: 'bar',\n        data: data,\n        options: options\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"smallbargraph\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"barhed\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"lefty\",\n        children: \"Weekly Revenue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: stat,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bargrph\",\n      style: {\n        width: '100%',\n        height: \"150px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Smallbar, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = Smallbar;\nexport default Smallbar;\nvar _c;\n$RefreshReg$(_c, \"Smallbar\");","map":{"version":3,"names":["React","useEffect","useRef","stat","Chart","jsxDEV","_jsxDEV","Smallbar","_s","chartRef","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","borderRadius","options","responsive","maintainAspectRatio","scales","y","display","plugins","legend","indexAxis","barPercentage","categoryPercentage","ctx","current","chart","destroy","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","height","ref","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/Aditya/projects/mine/dashboard copy/affiliated-ritual-frontend/src/components/Smallbar/Smallbar.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport \"./Smallbar.css\";\nimport stat from \"./stat.png\";\nimport Chart from 'chart.js/auto';\n\nconst Smallbar = () => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const data = {\n      labels: ['1', '2', '3', '4', '5', '6'],\n      datasets: [{\n        label: 'Data',\n        data: [80, 60, 90, 70, 50, 60],\n        backgroundColor: '#e4c748', \n        borderColor: '#e4c748',\n        borderWidth: .5,\n        borderRadius: 20,\n      }]\n    };\n\n    const options = {\n      responsive: true, \n  maintainAspectRatio: false,\n      scales: {\n        y: {\n          display: false // Hide y-axis\n        }\n      },\n      plugins: {\n        legend: {\n          display: false // Hide legend\n        }\n      },\n      indexAxis: 'x', // Display bars horizontally\n      barPercentage: 0.2, // Adjust bar width to fill the entire width of the canvas\n      categoryPercentage:1, // Adjust space between bars\n    };\n\n    const ctx = chartRef.current;\n    if (ctx) {\n      // Destroy existing chart if it exists\n      if (ctx.chart) {\n        ctx.chart.destroy();\n      }\n\n      // Create new chart\n      ctx.chart = new Chart(ctx, {\n        type: 'bar',\n        data: data,\n        options: options\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"smallbargraph\">\n      <div className=\"barhed\">\n        <h2 className=\"lefty\">Weekly Revenue</h2>\n        <div className=\"right\"> <img src={stat} alt=\"\" /></div>\n      </div>\n      <div className=\"bargrph\" style={{ width: '100%' ,height:\"150px\"}}>\n        <canvas ref={chartRef} ></canvas>\n      </div>\n    </div>\n  )\n}\n\nexport default Smallbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}